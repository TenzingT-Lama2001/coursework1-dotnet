@page "/inventorydetail"


<ul class="nav nav-tabs">
    <li class="nav-item ">
        <a class='nav-link btn @(_tabFilter == "All" ? "active" : "")' @onclick='()=>TabFilter("All")'>All</a>
    </li>
    <li class="nav-item">
        <a class='nav-link btn @(_tabFilter == "Due" ? "active" : "")' @onclick='()=>TabFilter("Due")'>Due</a>
    </li>
    <li class="nav-item">
        <a class='nav-link btn @(_tabFilter == "Done" ? "active" : "")' @onclick='()=>TabFilter("Done")'>Done</a>
    </li>
 
</ul>

<table class="table">
    <thead>
        <tr>

            <th>
                <div class="d-flex">
                    Item
                    <a class='btn text-@(_sortBy == "itemName" ? "primary" : "secondary")' data-mdb-toggle="tooltip"
                       @onclick='()=>SortByHandler("itemName")'>
                        <span class='oi oi-sort-@(_sortBy == "itemName" ? _sortDirection : "ascending")' />
                    </a>
                </div>
            </th>
            <th>
                <div class="d-flex">
                    Quantity in inventory
                    <a class='btn text-@(_sortBy == "quantity" ? "primary" : "secondary")' data-mdb-toggle="tooltip"
                       @onclick='()=>SortByHandler("quantity")'>
                        <span class='oi oi-sort-@(_sortBy == "quantity" ? _sortDirection : "ascending")' />
                    </a>
                </div>
            </th>
  
            <th>
                <div class="d-flex">
                    Last Taken out
                    <a class='btn text-@(_sortBy == "date" ? "primary" : "secondary")' data-mdb-toggle="tooltip"
                       @onclick='()=>SortByHandler("date")'>
                        <span class='oi oi-sort-@(_sortBy == "date" ? _sortDirection : "ascending")' />
                    </a>
                </div>
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            IEnumerable<DetailedInventory> itemList = _inventoryDetails;

            if (_sortBy == "itemName")
            {
                itemList = _sortDirection == "ascending" ? itemList.OrderBy(t => t.ItemName) : itemList.OrderByDescending(t =>
                t.ItemName);
            }
            else if (_sortBy == "quantity")
            {
                itemList = _sortDirection == "ascending" ? itemList.OrderBy(t => t.Quantity) : itemList.OrderByDescending(t =>
                t.Quantity);
            }

            else if (_sortBy == "date")
            {
                itemList = _sortDirection == "ascending" ? itemList.OrderBy(t => t.TakenOutDate) : itemList.OrderByDescending(t =>
                t.TakenOutDate);
            }



            foreach (var detail in itemList)
            {
                <tr>

                    <td>@detail.ItemName</td>
                    <td>
                        @detail.Quantity 
                    </td>
                    <td>
                        <p class="small mb-0">
                            @detail.TakenOutDate
                        </p>
                    </td>

                </tr>
            }
        }
    </tbody>
</table>





@code {
    [CascadingParameter]
    private GlobalState _globalState { get; set; }
    private bool _showDeclineItemDialog { get; set; }
    private bool _showApproveItemDialog { get; set; }
    private List<InventoryItem> _items { get; set; }
    private List<DetailedInventory> _inventoryDetails { get; set; }
    private InventoryItem _deleteItem { get; set; }
    private RequestedItem _declineItem { get; set; }
    private string _dialogTitle { get; set; }
    private string _dialogOkLabel { get; set; }
    private string _approveItemErrorMessage { get; set; }
    private string _declineItemErrorMessage { get; set; }
    private InventoryItem _itemModel { get; set; }
    private RequestedItem _requestedItemModel { get; set; }
    private string _tabFilter = "All";
    private string _sortBy = "dueDate";
    private string _sortDirection = "ascending";
    private string _adminName;
    private User _admin;
    private string _requestedBy;
    private string _role;
    private Status _isApproved = Status.Approved;



    protected override void OnInitialized()
    {
        _inventoryDetails = InventoryItemService.GetAllDetailedInventorys();
        _admin = UsersService.GetById(_globalState.CurrentUser.Id);
        _adminName = _admin.Username.ToString();

        _role = _admin.Role.ToString();



    }

    private void SortByHandler(string sortByName)
    {
        if (_sortBy == sortByName)
        {
            _sortDirection = _sortDirection == "ascending" ? "descending" : "ascending";
        }
        else
        {
            _sortBy = sortByName;
            _sortDirection = "ascending";
        }
    }


    private void TabFilter(string status)
    {
        _tabFilter = status;
    }

}
